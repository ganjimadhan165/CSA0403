#include <stdio.h>
#include <pthread.h>

// Function to be executed by thread 1
void *count_numbers(void *arg) {
    for (int i = 1; i <= 5; i++) {
        printf("Count: %d\n", i);
        sleep(1);  // Sleep for 1 second for demonstration
    }
    return NULL;
}

// Function to be executed by thread 2
void *print_hello(void *arg) {
    for (int i = 0; i < 5; i++) {
        printf("Hello from thread 2!\n");
        sleep(1);  // Sleep for 1 second for demonstration
    }
    return NULL;
}

int main() {
    pthread_t thread1, thread2;

    // Create thread 1
    if (pthread_create(&thread1, NULL, count_numbers, NULL) != 0) {
        perror("Failed to create thread 1");
        return 1;
    }

    // Create thread 2
    if (pthread_create(&thread2, NULL, print_hello, NULL) != 0) {
        perror("Failed to create thread 2");
        return 1;
    }

    // Wait for thread 1 to complete
    pthread_join(thread1, NULL);

    // Wait for thread 2 to complete
    pthread_join(thread2, NULL);

    printf("Both threads have finished execution.\n");

    return 0;
}
