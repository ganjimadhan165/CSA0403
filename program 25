#include <stdio.h>
#include <fcntl.h>      // open, fcntl
#include <unistd.h>     // read, write, close, lseek
#include <sys/stat.h>   // stat
#include <dirent.h>     // opendir, readdir
#include <string.h>
#include <stdlib.h>

int main() {
    int fd;
    char buffer[100];
    struct stat fileStat;

    // --- 1. Open a file ---
    fd = open("testfile.txt", O_CREAT | O_RDWR, 0644);
    if (fd < 0) {
        perror("open");
        return 1;
    }

    // --- 2. Use fcntl to get and set file descriptor flags ---
    int flags = fcntl(fd, F_GETFL);
    if (flags == -1) {
        perror("fcntl - get");
        close(fd);
        return 1;
    }

    printf("Original file descriptor flags: %d\n", flags);

    // Setting append flag using fcntl
    if (fcntl(fd, F_SETFL, flags | O_APPEND) == -1) {
        perror("fcntl - set");
        close(fd);
        return 1;
    }
    printf("Append flag set successfully.\n");

    // --- 3. Write some data and use lseek ---
    const char *text = "Hello, UNIX system calls!\n";
    write(fd, text, strlen(text));
    lseek(fd, 0, SEEK_SET);  // Move to beginning

    read(fd, buffer, sizeof(buffer) - 1);
    buffer[99] = '\0'; // Ensure null-termination
    printf("File contents (first 100 bytes):\n%s\n", buffer);

    // --- 4. Get file status using stat ---
    if (stat("testfile.txt", &fileStat) == -1) {
        perror("stat");
        close(fd);
        return 1;
    }

    printf("File Size: %ld bytes\n", fileStat.st_size);
    printf("Number of Links: %ld\n", fileStat.st_nlink);
    printf("File Permissions: %o\n", fileStat.st_mode & 0777);
    printf("Last Access Time: %ld\n", fileStat.st_atime);

    // --- 5. List files in current directory using opendir/readdir ---
    DIR *dir = opendir(".");
    struct dirent *entry;

    if (dir == NULL) {
        perror("opendir");
        return 1;
    }

    printf("\nFiles in current directory:\n");
    while ((entry = readdir(dir)) != NULL) {
        printf("%s\n", entry->d_name);
    }

    closedir(dir);
    close(fd);

    return 0;
}
