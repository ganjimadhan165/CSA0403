#include <stdio.h>
#include <fcntl.h>    // For open() and O_* constants
#include <unistd.h>   // For read(), write(), lseek(), close()
#include <string.h>
#include <errno.h>

int main() {
    int fd;
    char buffer[100];
    ssize_t bytesRead;

    // 1. Create/Open a file using open()
    fd = open("demo_file.txt", O_CREAT | O_RDWR, 0644);
    if (fd == -1) {
        perror("Error opening file");
        return 1;
    }
    printf("File opened successfully. File descriptor: %d\n", fd);

    // 2. Write to file
    const char *text = "This is a demo of UNIX system calls.\n";
    if (write(fd, text, strlen(text)) == -1) {
        perror("Error writing to file");
        close(fd);
        return 1;
    }
    printf("Data written to file successfully.\n");

    // 3. Move file pointer to the beginning using lseek()
    if (lseek(fd, 0, SEEK_SET) == -1) {
        perror("Error seeking in file");
        close(fd);
        return 1;
    }

    // 4. Read data from file
    bytesRead = read(fd, buffer, sizeof(buffer) - 1);
    if (bytesRead == -1) {
        perror("Error reading file");
        close(fd);
        return 1;
    }
    buffer[bytesRead] = '\0';  // Null-terminate the string
    printf("Data read from file:\n%s", buffer);

    // 5. Close the file
    if (close(fd) == -1) {
        perror("Error closing file");
        return 1;
    }
    printf("File closed successfully.\n");

    return 0;
}
