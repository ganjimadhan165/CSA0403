#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <string.h>
#include <unistd.h>

#define SHM_SIZE 1024  // Shared memory size

int main() {
    key_t key;
    int shmid;
    char *shm_ptr;

    // Generate a unique key for the shared memory segment
    key = ftok("shmfile", 65);
    if (key == -1) {
        perror("ftok failed");
        exit(1);
    }

    // Create shared memory segment
    shmid = shmget(key, SHM_SIZE, 0666 | IPC_CREAT);
    if (shmid == -1) {
        perror("shmget failed");
        exit(1);
    }

    // Attach the shared memory segment to the process's address space
    shm_ptr = (char*)shmat(shmid, NULL, 0);
    if (shm_ptr == (char *)-1) {
        perror("shmat failed");
        exit(1);
    }

    // Write a message to the shared memory
    printf("Writer Process: Enter a message: ");
    fgets(shm_ptr, SHM_SIZE, stdin);
    printf("Writer Process: Message written to shared memory.\n");

    // Keep the writer process running to simulate waiting
    sleep(5);

    // Detach from shared memory
    if (shmdt(shm_ptr) == -1) {
        perror("shmdt failed");
        exit(1);
    }

    return 0;
}
